const express = require('express');const sql = require('mssql');const dbConfig = require('../config/database');const router = express.Router();router.get('/mine', async (req, res) => {  if (req.isAuthenticated()) {    try {      const pool = await sql.connect(dbConfig);      const userId = req.user.Id;      const result = await pool.request()        .input('userId', sql.Int, userId)        .query('SELECT * FROM Bookings WHERE UserId = @userId');      res.json(result.recordset);    } catch (error) {      console.error('Error while getting reservations:', error);      res.status(500).send('Error while getting reservations.');    }  } else {    res.status(401).send('Not authorized.');  }});router.get('/:userId', async (req, res) => {    try {      const pool = await sql.connect(dbConfig);      const userId = req.params.userId;      const result = await pool.request()        .input('userId', sql.Int, userId)        .query('SELECT * FROM Bookings WHERE userId = @userId');      res.json(result.recordset);    } catch (error) {      console.error('Error while getting reservations:', error);      res.status(500).send('Error while getting reservations.');    }});router.post('/add', async (req, res) => {  try {    const pool = await sql.connect(dbConfig);    const { userId, flightId, luggageType, seat } = req.body;    const result = await pool.request()      .input('userId', sql.Int, userId)      .input('flightId', sql.Int, flightId)      .input('luggageType', sql.VarChar(50), luggageType)      .input('seat', sql.VarChar(10), seat)      .query('INSERT INTO Bookings (userId, flightId, luggageType, seat) VALUES (@userId, @flightId, @luggageType, @seat); SELECT SCOPE_IDENTITY() AS bookingId;');    const bookingId = result.recordset[0].bookingId;    res.json({ bookingId });  } catch (error) {    console.error('Error while adding booking:', error);    res.status(500).send('Error while adding booking.');  }});module.exports = router;
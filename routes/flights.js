const express = require('express');const sql = require('mssql');const dbConfig = require('../config/database');const router = express.Router();router.get('/all', async (req, res) => {  try {    const pool = await sql.connect(dbConfig);    const request = pool.request();    let query = 'SELECT * FROM Flights';    let where = '';    const limit = parseInt(req.query.limit);    const fromAirport = req.query.fromAirport;    const toAirport = req.query.toAirport;    if (fromAirport) {      request.input('fromAirport', sql.NVarChar, fromAirport);      where = ' WHERE fromAirport = @fromAirport';    }    if (toAirport) {      request.input('toAirport', sql.NVarChar, toAirport);      where = where ? `${where} AND toAirport = @toAirport` : ' WHERE toAirport = @toAirport';    }    if (limit) {      request.input('limit', sql.Int, limit);      query = `SELECT TOP (${limit}) * FROM Flights ${where} ORDER BY id DESC`;    } else {      query = `${query} ${where}`;    }    const result = await request.query(query);    res.json(result.recordset);  } catch (error) {    console.error('Error while getting flights:', error);    res.status(500).send('Error while getting flights.');  }});router.get('/:id', async (req, res) => {  try {    const pool = await sql.connect(dbConfig);    const request = pool.request();    const id = req.params.id;    request.input('id', sql.Int, id);    const query = 'SELECT * FROM Flights WHERE id = @id';    const result = await request.query(query);    res.json(result.recordset[0]);  } catch (error) {    console.error('Error while getting the flight:', error);    res.status(500).send('Error while getting the flight.');  }});module.exports = router;
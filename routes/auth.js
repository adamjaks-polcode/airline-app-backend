const express = require('express');const passport = require('passport');const router = express.Router();const sql = require('mssql');const bcrypt = require('bcrypt');const dbConfig = require('../config/database');const saveUserToDatabase = async (username, password) => {  try {    const hashedPassword = await bcrypt.hash(password, 10);    const pool = await sql.connect(dbConfig);    await pool.request()      .input('username', sql.NVarChar, username)      .input('password', sql.NVarChar, hashedPassword)      .query('INSERT INTO Users (username, password) VALUES (@username, @password)');    return true;  } catch (error) {    console.error('Error saving user to database:', error);    return false;  }};router.post('/login', passport.authenticate('local', { successRedirect: '/protected', failureRedirect: '/login', failureFlash: true }));router.post('/register', async (req, res) => {  const username = req.body.username;  const password = req.body.password;  const success = await saveUserToDatabase(username, password);  if (success) {    res.send('User registered.');  } else {    res.status(500).send('Error registering user.');  }});router.get('/protected', (req, res) => {  if (req.isAuthenticated()) {    res.send('This is a protected route.');  } else {    res.send('Oj oj oj.');    res.redirect('/login');  }});module.exports = router;